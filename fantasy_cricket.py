# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.14.1
#
# WARNING! All changes made in this file will be lost!


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox

from open import Ui_Dialog as Open  
from new import Ui_Dialog as New	 
from evaluate import Ui_evaluate_team as Eva 
from Points_Calculator import player_points # Only imports a dictionary

import sqlite3
data = sqlite3.connect('database.db')
datacurs = data.cursor()


class Ui_MainWindow(object):
	def __init__(self): # linking files and creating objects
		self.new_Window = QtWidgets.QMainWindow()
		self.new_screen = New()
		self.new_screen.setupUi(self.new_Window)

		self.evaluate_Window = QtWidgets.QMainWindow()
		self.eval_screen = Eva()
		self.eval_screen.setupUi(self.evaluate_Window)

		self.open_Window = QtWidgets.QMainWindow()
		self.open_screen = Open()
		self.open_screen.setupUi(self.open_Window)

	def setupUi(self, MainWindow): #Ui setup
		# local variables
		self.avail_points = 1000
		self.used_points = 0
		self.totalcount = 0
		self.batsmencount = 0
		self.bowlerscount = 0
		self.alrdscount = 0
		self.wicketerscount = 0
		self.a = []  # bowler names list
		self.b = []  #  batsman nameslist
		self.c = []   # allrounder names list
		self.d = []  #wicketkeeper names list
		self.selectlist = []	# selected player's list

		MainWindow.setObjectName("MainWindow")
		MainWindow.resize(789, 728)
		palette = QtGui.QPalette()
		brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Light, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
		brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Dark, brush)
		brush = QtGui.QBrush(QtGui.QColor(170, 170, 170))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Mid, brush)
		brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
		brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
		brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Shadow, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipBase, brush)
		brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipText, brush)
		brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Light, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
		brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Dark, brush)
		brush = QtGui.QBrush(QtGui.QColor(170, 170, 170))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Mid, brush)
		brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
		brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
		brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Shadow, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipBase, brush)
		brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipText, brush)
		brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Light, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
		brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Dark, brush)
		brush = QtGui.QBrush(QtGui.QColor(170, 170, 170))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Mid, brush)
		brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
		brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
		brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Shadow, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipBase, brush)
		brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipText, brush)
		MainWindow.setPalette(palette)
		font = QtGui.QFont()
		font.setFamily("Bookman Old Style")
		font.setPointSize(9)
		font.setBold(True)
		font.setItalic(True)
		font.setWeight(69)
		MainWindow.setFont(font)
		self.centralwidget = QtWidgets.QWidget(MainWindow)
		self.centralwidget.setObjectName("centralwidget")
		self.team_name = QtWidgets.QLabel(self.centralwidget)
		self.team_name.setGeometry(QtCore.QRect(620, 230, 91, 25))
		font = QtGui.QFont()
		font.setFamily("DejaVu Sans")
		font.setPointSize(12)
		font.setBold(True)
		font.setItalic(False)
		font.setWeight(69)
		self.team_name.setFont(font)
		self.team_name.setStyleSheet("")
		self.team_name.setObjectName("team_name")
		self.line = QtWidgets.QFrame(self.centralwidget)
		self.line.setGeometry(QtCore.QRect(9, 40, 769, 16))
		self.line.setFrameShape(QtWidgets.QFrame.HLine)
		self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
		self.line.setObjectName("line")
		self.line_2 = QtWidgets.QFrame(self.centralwidget)
		self.line_2.setGeometry(QtCore.QRect(9, 134, 769, 16))
		self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
		self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
		self.line_2.setObjectName("line_2")
		self.line_3 = QtWidgets.QFrame(self.centralwidget)
		self.line_3.setGeometry(QtCore.QRect(9, 210, 769, 16))
		self.line_3.setFrameShape(QtWidgets.QFrame.HLine)
		self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
		self.line_3.setObjectName("line_3")
		self.label = QtWidgets.QLabel(self.centralwidget)
		self.label.setGeometry(QtCore.QRect(9, 219, 16, 16))
		font = QtGui.QFont()
		font.setFamily("Bookman Old Style")
		font.setPointSize(9)
		font.setBold(True)
		font.setItalic(True)
		font.setWeight(69)
		self.label.setFont(font)
		self.label.setText("")
		self.label.setObjectName("label")
		self.widget = QtWidgets.QWidget(self.centralwidget)
		self.widget.setGeometry(QtCore.QRect(10, 160, 761, 41))
		self.widget.setObjectName("widget")
		self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.widget)
		self.horizontalLayout_5.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
		self.horizontalLayout_5.setContentsMargins(0, 0, 0, 0)
		self.horizontalLayout_5.setObjectName("horizontalLayout_5")
		self.Totalplayers = QtWidgets.QLabel(self.widget)
		font = QtGui.QFont()
		font.setFamily("Sans")
		font.setPointSize(11)
		font.setBold(True)
		font.setItalic(False)
		font.setWeight(69)
		self.Totalplayers.setFont(font)
		self.Totalplayers.setIndent(30)
		self.Totalplayers.setObjectName("Totalplayers")
		self.horizontalLayout_5.addWidget(self.Totalplayers)
		self.points_available = QtWidgets.QLabel(self.widget)
		font = QtGui.QFont()
		font.setFamily("Bookman Old Style")
		font.setPointSize(11)
		font.setBold(True)
		font.setItalic(True)
		font.setWeight(69)
		self.points_available.setFont(font)
		self.points_available.setIndent(-10)
		self.points_available.setObjectName("points_available")
		self.horizontalLayout_5.addWidget(self.points_available)
		self.TeamName = QtWidgets.QLabel(self.widget)
		font = QtGui.QFont()
		font.setFamily("Sans")
		font.setPointSize(11)
		font.setBold(True)
		font.setItalic(False)
		font.setWeight(69)
		self.TeamName.setFont(font)
		self.TeamName.setIndent(100)
		self.TeamName.setObjectName("TeamName")
		self.horizontalLayout_5.addWidget(self.TeamName)
		self.points_used = QtWidgets.QLabel(self.widget)
		font = QtGui.QFont()
		font.setFamily("Bookman Old Style")
		font.setPointSize(11)
		font.setBold(True)
		font.setItalic(True)
		font.setWeight(69)
		self.points_used.setFont(font)
		self.points_used.setIndent(60)
		self.points_used.setObjectName("points_used")
		self.horizontalLayout_5.addWidget(self.points_used)
		self.label_2 = QtWidgets.QLabel(self.centralwidget)
		self.label_2.setGeometry(QtCore.QRect(480, 220, 131, 41))
		font = QtGui.QFont()
		font.setPointSize(13)
		font.setItalic(False)
		self.label_2.setFont(font)
		self.label_2.setObjectName("label_2")
		self.label_3 = QtWidgets.QLabel(self.centralwidget)
		self.label_3.setGeometry(QtCore.QRect(16, 259, 211, 31))
		self.label_3.setObjectName("label_3")
		self.label_4 = QtWidgets.QLabel(self.centralwidget)
		self.label_4.setGeometry(QtCore.QRect(400, 260, 211, 31))
		self.label_4.setObjectName("label_4")
		self.label_5 = QtWidgets.QLabel(self.centralwidget)
		self.label_5.setGeometry(QtCore.QRect(40, 10, 711, 31))
		sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
		sizePolicy.setHorizontalStretch(0)
		sizePolicy.setVerticalStretch(0)
		sizePolicy.setHeightForWidth(self.label_5.sizePolicy().hasHeightForWidth())
		self.label_5.setSizePolicy(sizePolicy)
		font = QtGui.QFont()
		font.setPointSize(16)
		font.setItalic(False)
		self.label_5.setFont(font)
		self.label_5.setFrameShape(QtWidgets.QFrame.Box)
		self.label_5.setAlignment(QtCore.Qt.AlignCenter)
		self.label_5.setObjectName("label_5")
		self.availablelist = QtWidgets.QListWidget(self.centralwidget)
		self.availablelist.setGeometry(QtCore.QRect(10, 290, 361, 381))
		self.availablelist.setStyleSheet("color: rgb(0, 0, 0);background-color: rgb(240, 240, 240);")
		self.availablelist.setObjectName("availablelist")
		self.selectedlist = QtWidgets.QListWidget(self.centralwidget)
		self.selectedlist.setGeometry(QtCore.QRect(390, 290, 381, 381))
		palette = QtGui.QPalette()
		brush = QtGui.QBrush(QtGui.QColor(3, 190, 159))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
		brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Light, brush)
		brush = QtGui.QBrush(QtGui.QColor(212, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
		brush = QtGui.QBrush(QtGui.QColor(85, 127, 127))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Dark, brush)
		brush = QtGui.QBrush(QtGui.QColor(113, 170, 170))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Mid, brush)
		brush = QtGui.QBrush(QtGui.QColor(3, 190, 159))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
		brush = QtGui.QBrush(QtGui.QColor(3, 190, 159))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
		brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
		brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
		brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Shadow, brush)
		brush = QtGui.QBrush(QtGui.QColor(212, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipBase, brush)
		brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipText, brush)
		brush = QtGui.QBrush(QtGui.QColor(3, 190, 159))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
		brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Light, brush)
		brush = QtGui.QBrush(QtGui.QColor(212, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
		brush = QtGui.QBrush(QtGui.QColor(85, 127, 127))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Dark, brush)
		brush = QtGui.QBrush(QtGui.QColor(113, 170, 170))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Mid, brush)
		brush = QtGui.QBrush(QtGui.QColor(3, 190, 159))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
		brush = QtGui.QBrush(QtGui.QColor(3, 190, 159))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
		brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
		brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
		brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Shadow, brush)
		brush = QtGui.QBrush(QtGui.QColor(212, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipBase, brush)
		brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipText, brush)
		brush = QtGui.QBrush(QtGui.QColor(3, 190, 159))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
		brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Light, brush)
		brush = QtGui.QBrush(QtGui.QColor(212, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
		brush = QtGui.QBrush(QtGui.QColor(85, 127, 127))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Dark, brush)
		brush = QtGui.QBrush(QtGui.QColor(113, 170, 170))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Mid, brush)
		brush = QtGui.QBrush(QtGui.QColor(3, 190, 159))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
		brush = QtGui.QBrush(QtGui.QColor(3, 190, 159))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
		brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
		brush = QtGui.QBrush(QtGui.QColor(240, 240, 240))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
		brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Shadow, brush)
		brush = QtGui.QBrush(QtGui.QColor(170, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipBase, brush)
		brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipText, brush)
		self.selectedlist.setPalette(palette)
		self.selectedlist.setStyleSheet("color: rgb(0, 0, 0);background-color: rgb(240, 240, 240);")
		self.selectedlist.setObjectName("selectedlist")
		self.batradio = QtWidgets.QRadioButton(self.centralwidget)
		self.batradio.setEnabled(False)
		self.batradio.setGeometry(QtCore.QRect(10, 240, 69, 21))
		font = QtGui.QFont()
		font.setFamily("Sans")
		font.setPointSize(9)
		font.setBold(True)
		font.setWeight(69)
		self.batradio.setFont(font)
		self.batradio.setTabletTracking(False)
		self.batradio.setAcceptDrops(False)
		self.batradio.setToolTipDuration(20)
		self.batradio.setStyleSheet("Batmans")
		self.batradio.setObjectName("batradio")
		self.wkradio = QtWidgets.QRadioButton(self.centralwidget)
		self.wkradio.setEnabled(False)
		self.wkradio.setGeometry(QtCore.QRect(70, 240, 120, 21))
		font = QtGui.QFont()
		font.setFamily("Sans")
		font.setPointSize(9)
		font.setBold(True)
		font.setItalic(False)
		font.setWeight(69)
		self.wkradio.setFont(font)
		self.wkradio.setObjectName("wkradio")
		self.arradio = QtWidgets.QRadioButton(self.centralwidget)
		self.arradio.setEnabled(False)
		self.arradio.setGeometry(QtCore.QRect(130, 240, 100, 21))
		font = QtGui.QFont()
		font.setFamily("Sans")
		font.setPointSize(9)
		font.setBold(True)
		font.setItalic(False)
		font.setWeight(69)
		self.arradio.setFont(font)
		self.arradio.setChecked(False)
		self.arradio.setObjectName("arradio")
		self.bowlradio = QtWidgets.QRadioButton(self.centralwidget)
		self.bowlradio.setEnabled(False)
		self.bowlradio.setGeometry(QtCore.QRect(200, 240, 79, 21))
		font = QtGui.QFont()
		font.setFamily("Sans")
		font.setPointSize(9)
		font.setBold(True)
		font.setItalic(False)
		font.setWeight(69)
		self.bowlradio.setFont(font)
		self.bowlradio.setObjectName("bowlradio")
		self.Batsman = QtWidgets.QLabel(self.centralwidget)
		self.Batsman.setGeometry(QtCore.QRect(10, 50, 126, 41))
		palette = QtGui.QPalette()
		brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
		brush = QtGui.QBrush(QtGui.QColor(212, 212, 212))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Light, brush)
		brush = QtGui.QBrush(QtGui.QColor(233, 233, 233))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
		brush = QtGui.QBrush(QtGui.QColor(106, 106, 106))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Dark, brush)
		brush = QtGui.QBrush(QtGui.QColor(141, 141, 141))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Mid, brush)
		brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
		brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
		brush = QtGui.QBrush(QtGui.QColor(212, 212, 212))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
		brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Shadow, brush)
		brush = QtGui.QBrush(QtGui.QColor(233, 233, 233))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipBase, brush)
		brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipText, brush)
		brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
		brush = QtGui.QBrush(QtGui.QColor(212, 212, 212))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Light, brush)
		brush = QtGui.QBrush(QtGui.QColor(233, 233, 233))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
		brush = QtGui.QBrush(QtGui.QColor(106, 106, 106))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Dark, brush)
		brush = QtGui.QBrush(QtGui.QColor(141, 141, 141))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Mid, brush)
		brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
		brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
		brush = QtGui.QBrush(QtGui.QColor(212, 212, 212))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
		brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Shadow, brush)
		brush = QtGui.QBrush(QtGui.QColor(233, 233, 233))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipBase, brush)
		brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipText, brush)
		brush = QtGui.QBrush(QtGui.QColor(106, 106, 106))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
		brush = QtGui.QBrush(QtGui.QColor(212, 212, 212))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Light, brush)
		brush = QtGui.QBrush(QtGui.QColor(233, 233, 233))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
		brush = QtGui.QBrush(QtGui.QColor(106, 106, 106))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Dark, brush)
		brush = QtGui.QBrush(QtGui.QColor(141, 141, 141))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Mid, brush)
		brush = QtGui.QBrush(QtGui.QColor(106, 106, 106))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
		brush = QtGui.QBrush(QtGui.QColor(106, 106, 106))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
		brush = QtGui.QBrush(QtGui.QColor(212, 212, 212))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
		brush = QtGui.QBrush(QtGui.QColor(212, 212, 212))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
		brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Shadow, brush)
		brush = QtGui.QBrush(QtGui.QColor(212, 212, 212))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
		brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipBase, brush)
		brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
		brush.setStyle(QtCore.Qt.SolidPattern)
		palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipText, brush)
		self.Batsman.setPalette(palette)
		font = QtGui.QFont()
		font.setFamily("Sans")
		font.setPointSize(10)
		font.setBold(True)
		font.setItalic(False)
		font.setWeight(69)
		self.Batsman.setFont(font)
		self.Batsman.setIndent(1)
		self.Batsman.setObjectName("Batsman")
		self.Bowlers = QtWidgets.QLabel(self.centralwidget)
		self.Bowlers.setGeometry(QtCore.QRect(370, 110, 110, 17))
		font = QtGui.QFont()
		font.setFamily("Sans")
		font.setPointSize(10)
		font.setBold(True)
		font.setItalic(False)
		font.setWeight(69)
		self.Bowlers.setFont(font)
		self.Bowlers.setObjectName("Bowlers")
		self.alrcount = QtWidgets.QLabel(self.centralwidget)
		self.alrcount.setGeometry(QtCore.QRect(500, 60, 31, 17))
		font = QtGui.QFont()
		font.setFamily("Bookman Old Style")
		font.setPointSize(10)
		font.setBold(True)
		font.setItalic(True)
		font.setWeight(69)
		self.alrcount.setFont(font)
		self.alrcount.setIndent(10)
		self.alrcount.setObjectName("alrcount")
		self.bowlcount = QtWidgets.QLabel(self.centralwidget)
		self.bowlcount.setGeometry(QtCore.QRect(480, 110, 31, 17))
		font = QtGui.QFont()
		font.setFamily("Bookman Old Style")
		font.setPointSize(10)
		font.setBold(True)
		font.setItalic(True)
		font.setWeight(69)
		self.bowlcount.setFont(font)
		self.bowlcount.setIndent(10)
		self.bowlcount.setObjectName("bowlcount")
		self.batcount = QtWidgets.QLabel(self.centralwidget)
		self.batcount.setGeometry(QtCore.QRect(130, 60, 21, 17))
		font = QtGui.QFont()
		font.setFamily("Bookman Old Style")
		font.setPointSize(10)
		font.setBold(True)
		font.setItalic(True)
		font.setWeight(69)
		self.batcount.setFont(font)
		self.batcount.setObjectName("batcount")
		self.Allrounder = QtWidgets.QLabel(self.centralwidget)
		self.Allrounder.setGeometry(QtCore.QRect(370, 60, 123, 17))
		font = QtGui.QFont()
		font.setFamily("Sans")
		font.setPointSize(10)
		font.setBold(True)
		font.setItalic(False)
		font.setWeight(69)
		self.Allrounder.setFont(font)
		self.Allrounder.setObjectName("Allrounder")
		self.Wicketkeeepr = QtWidgets.QLabel(self.centralwidget)
		self.Wicketkeeepr.setGeometry(QtCore.QRect(20, 110, 139, 17))
		font = QtGui.QFont()
		font.setFamily("Sans")
		font.setPointSize(10)
		font.setBold(True)
		font.setItalic(False)
		font.setWeight(69)
		self.Wicketkeeepr.setFont(font)
		self.Wicketkeeepr.setObjectName("Wicketkeeepr")
		self.wicketcount = QtWidgets.QLabel(self.centralwidget)
		self.wicketcount.setGeometry(QtCore.QRect(160, 110, 31, 17))
		font = QtGui.QFont()
		font.setFamily("Bookman Old Style")
		font.setPointSize(10)
		font.setBold(True)
		font.setItalic(True)
		font.setWeight(69)
		self.wicketcount.setFont(font)
		self.wicketcount.setIndent(10)
		self.wicketcount.setObjectName("wicketcount")
		self.line.raise_()
		self.line_2.raise_()
		self.line_3.raise_()
		self.label.raise_()
		self.batradio.raise_()
		self.wkradio.raise_()
		self.arradio.raise_()
		self.bowlradio.raise_()
		self.label_2.raise_()
		self.label_3.raise_()
		self.label_4.raise_()
		self.label_5.raise_()
		self.team_name.raise_()
		MainWindow.setCentralWidget(self.centralwidget)
		self.menubar = QtWidgets.QMenuBar(MainWindow)
		self.menubar.setGeometry(QtCore.QRect(0, 0, 789, 20))
		self.menubar.setObjectName("menubar")
		self.menuManage_Teams = QtWidgets.QMenu(self.menubar)
		font = QtGui.QFont()
		font.setFamily("Sans")
		font.setBold(True)
		font.setWeight(69)
		self.menuManage_Teams.setFont(font)
		self.menuManage_Teams.setObjectName("menuManage_Teams")
		MainWindow.setMenuBar(self.menubar)
		self.statusbar = QtWidgets.QStatusBar(MainWindow)
		self.statusbar.setObjectName("statusbar")
		MainWindow.setStatusBar(self.statusbar)
		self.new_team = QtWidgets.QAction(MainWindow)
		font = QtGui.QFont()
		font.setFamily("DejaVu Sans")
		font.setBold(False)
		font.setWeight(50)
		self.new_team.setFont(font)
		self.new_team.setProperty("shortcutVisibleInContextMenu", True)
		self.new_team.setObjectName("new_team")
		self.new_team.triggered.connect(self.file_new)
		self.open_team = QtWidgets.QAction(MainWindow)
		font = QtGui.QFont()
		font.setFamily("DejaVu Sans")
		font.setBold(False)
		font.setWeight(50)
		self.open_team.setFont(font)
		self.open_team.setProperty("shortcutVisibleInContextMenu", True)
		self.open_team.setObjectName("open_team")
		self.open_team.triggered.connect(self.open_file)
		self.save_team = QtWidgets.QAction(MainWindow)
		font = QtGui.QFont()
		font.setFamily("DejaVu Sans")
		font.setBold(False)
		font.setWeight(50)
		self.save_team.setFont(font)
		self.save_team.setProperty("shortcutVisibleInContextMenu", True)
		self.save_team.setObjectName("save_team")
		self.save_team.triggered.connect(self.file_save)
		self.evaluate_team = QtWidgets.QAction(MainWindow)
		font = QtGui.QFont()
		font.setFamily("DejaVu Sans")
		font.setBold(False)
		font.setWeight(50)
		self.evaluate_team.setFont(font)
		self.evaluate_team.setProperty("shortcutVisibleInContextMenu", True)
		self.evaluate_team.setObjectName("evaluate_team")
		self.evaluate_team.triggered.connect(self.eval_file)
		self.actionQuit = QtWidgets.QAction(MainWindow)
		font = QtGui.QFont()
		font.setFamily("DejaVu Sans")
		font.setBold(False)
		font.setWeight(50)
		self.actionQuit.setFont(font)
		self.actionQuit.setProperty("shortcutVisibleInContextMenu", True)
		self.actionQuit.setObjectName("actionQuit")
		self.actionQuit.triggered.connect(lambda: quit())
		self.menuManage_Teams.addAction(self.new_team)
		self.menuManage_Teams.addAction(self.open_team)
		self.menuManage_Teams.addAction(self.evaluate_team)
		self.menuManage_Teams.addAction(self.save_team)
		self.menuManage_Teams.addAction(self.actionQuit)
		self.menubar.addAction(self.menuManage_Teams.menuAction())

		self.retranslateUi(MainWindow)
		QtCore.QMetaObject.connectSlotsByName(MainWindow)

		# Click responses
		self.availablelist.itemDoubleClicked.connect(self.transfer1)
		self.selectedlist.itemDoubleClicked.connect(self.transfer2)
		self.stats = {}
		self.new_screen.savename.clicked.connect(self.namechange)
		self.batradio.clicked.connect(self.load_names)
		self.wkradio.clicked.connect(self.load_names)
		self.bowlradio.clicked.connect(self.load_names)
		self.arradio.clicked.connect(self.load_names)

	def retranslateUi(self, MainWindow):
		_translate = QtCore.QCoreApplication.translate
		MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
		self.team_name.setText(_translate("MainWindow", "XXX"))
		self.Totalplayers.setText(_translate("MainWindow", "Available Points"))
		self.points_available.setStatusTip(_translate("MainWindow", "max point=100"))
		self.points_available.setText(_translate("MainWindow", "##"))
		self.TeamName.setText(_translate("MainWindow", "Points used"))
		self.points_used.setText(_translate("MainWindow", "##"))
		self.label_2.setText(_translate("MainWindow", "Team Name:"))
		self.label_3.setText(_translate("MainWindow", "Available Players"))
		self.label_4.setText(_translate("MainWindow", "Selected Players"))
		self.label_5.setText(_translate("MainWindow", "Welcome to Fantasy Cricket!"))
		self.batradio.setText(_translate("MainWindow", "Bat"))
		self.wkradio.setText(_translate("MainWindow", "WK"))
		self.arradio.setText(_translate("MainWindow", "AR"))
		self.bowlradio.setText(_translate("MainWindow", "BOWL"))
		self.Batsman.setText(_translate("MainWindow", "Batsman(Bat)"))
		self.Bowlers.setText(_translate("MainWindow", "Bowlers (Bowl)"))
		self.alrcount.setText(_translate("MainWindow", "##"))
		self.bowlcount.setText(_translate("MainWindow", "##"))
		self.batcount.setText(_translate("MainWindow", "##"))
		self.Allrounder.setText(_translate("MainWindow", "Allrounder (ALR)"))
		self.Wicketkeeepr.setText(_translate("MainWindow", "WicketKeeper(WK)"))
		self.wicketcount.setText(_translate("MainWindow", "##"))
		self.menuManage_Teams.setTitle(_translate("MainWindow", "Manage Teams"))
		self.new_team.setText(_translate("MainWindow", "New Team"))
		self.new_team.setStatusTip(_translate("MainWindow", "enter team name"))
		self.new_team.setShortcut(_translate("MainWindow", "Ctrl+N"))
		self.open_team.setText(_translate("MainWindow", "Open Team"))
		self.open_team.setStatusTip(_translate("MainWindow", "opening team"))
		self.open_team.setShortcut(_translate("MainWindow", "Ctrl+O"))
		self.save_team.setText(_translate("MainWindow", "Save Team"))
		self.save_team.setStatusTip(_translate("MainWindow", "saving team.."))
		self.save_team.setShortcut(_translate("MainWindow", "Ctrl+S"))
		self.evaluate_team.setText(_translate("MainWindow", "Evaluate Team"))
		self.evaluate_team.setShortcut(_translate("MainWindow", "Ctrl+E"))
		self.actionQuit.setText(_translate("MainWindow", "Quit"))
		self.actionQuit.setShortcut(_translate("MainWindow", "Ctrl+Q"))

#Double Click functions:
	def transfer1(self, item):# available -> selected 
		self.calculations_1(item.text())
		self.availablelist.takeItem(self.availablelist.row(item))
		self.selectedlist.addItem(item.text())
		self.totalcount = self.selectedlist.count()
		self.selectlist.append(item.text())
		self.checkerror()

	def transfer2(self, item):#available <- Selected
		self.selectedlist.takeItem(self.selectedlist.row(item))
		self.availablelist.addItem(item.text())
		self.selectlist.remove(item.text())
		self.totalcount = self.selectedlist.count()
		self.calculations_2(item.text())

	def calculations_1(self, cat): # update player and point count
		self.avail_points -= self.stats[cat]
		self.used_points += self.stats[cat]
		if cat in self.a:
			self.bowlerscount += 1
		elif cat in self.d:
			self.wicketerscount += 1
		elif cat in self.c:
			self.alrdscount += 1
		elif cat in self.b:
			self.batsmencount += 1

		self.points_available.setText(str(self.avail_points))
		self.points_used.setText(str(self.used_points))
		self.bowlcount.setText(str(self.bowlerscount))
		self.batcount.setText(str(self.batsmencount))
		self.alrcount.setText(str(self.alrdscount))
		self.wicketcount.setText(str(self.wicketerscount))

	def calculations_2(self, cat):  # update player and point count 
		self.avail_points += self.stats[cat]
		self.used_points -= self.stats[cat]
		if cat in self.a:
			self.bowlerscount -= 1
		elif cat in self.d:
			self.wicketerscount -= 1
		elif cat in self.c:
			self.alrdscount -= 1
		elif cat in self.b:
			self.batsmencount -= 1

		self.points_available.setText(str(self.avail_points))
		self.points_used.setText(str(self.used_points))
		self.bowlcount.setText(str(self.bowlerscount))
		self.batcount.setText(str(self.batsmencount))
		self.alrcount.setText(str(self.alrdscount))
		self.wicketcount.setText(str(self.wicketerscount))
#Double click functions end

#Menu Functions
	def file_new(self):# opens new.py
		self.new_Window.show()

	def open_file(self): # opens open file
		self.open_screen.setupUi(self.open_Window)
		self.open_Window.show()
		self.open_screen.openbtn.clicked.connect(self.openteam)

	def eval_file(self): # opens evaluate file
		self.eval_screen.setupUi(self.evaluate_Window)
		self.evaluate_Window.show()

	def namechange(self): # set name for team
		teamname = self.new_screen.team_name.text()
		datacurs.execute("SELECT DISTINCT name FROM teams")
		allteams = datacurs.fetchall()
		for oneteam in allteams:
			if oneteam[0] == teamname:
				msg = QtWidgets.QMessageBox()
				msg.setIcon(QtWidgets.QMessageBox.Information)
				msg.setText("Team name already exists, try something else")
				msg.setWindowTitle("Error")
				msg.exec_()
				return 0
		if len(teamname) == 0:
			msg = QtWidgets.QMessageBox()
			msg.setIcon(QtWidgets.QMessageBox.Warning)
			msg.setText("Team name cannot be empty")
			msg.setWindowTitle("Error")
			msg.exec_()
			return 0
		elif teamname.isnumeric():
			msg = QtWidgets.QMessageBox()
			msg.setIcon(QtWidgets.QMessageBox.Warning)
			msg.setText("Team name cannot be only numbers")
			msg.setWindowTitle("Error")
			msg.exec_()
			return 0
		else:
			self.reset()
			self.tname = self.new_screen.team_name.text()
			self.team_name.setText(self.tname)
			self.new_Window.close()

	def file_save(self): # save teams, if already there -> update
		if not self.checkerror():  # if error
			msg = QMessageBox()
			msg.setIcon(QMessageBox.Critical)
			msg.setInformativeText('Insufficient Players OR Points !!')
			msg.setWindowTitle('Error')
			msg.exec_()
		elif self.checkerror():  # if no error
			try:
				datacurs.execute("SELECT DISTINCT name FROM teams;")
				allteams = datacurs.fetchall()
				for oneteam in allteams:
					if self.team_name.text() == oneteam[0]:
						print('Updating already there')
						datacurs.execute("DELETE  FROM teams WHERE name='" + self.team_name.text() + "';")
			except:
				print('error')
			for i in range(self.selectedlist.count()):
				try:
					datacurs.execute("INSERT INTO teams (name,players,value) VALUES (?,?,?)",
									 (self.team_name.text(), self.selectlist[i], player_points[self.selectlist[i]]))
				except:
					print('error in operation!')
			data.commit()
		else:
			print('---error in operation')

	def openteam(self): # open saved teams
		self.reset()
		teamname = self.open_screen.opendrop.currentText()
		self.team_name.setText(teamname)
		self.enablebuttons()
		datacurs.execute("SELECT players from teams WHERE name= '" + teamname + "';")
		Players = datacurs.fetchall()
		scores = []
		for Player in Players:
			datacurs.execute("SELECT value from stats WHERE player='"+Player[0]+"';")
			playval = datacurs.fetchone()
			scores.append(playval[0])
		summ = 0
		for score in scores:
			summ += score
		self.selectedlist.clear()
		self.load_names()
		for Player in Players:
			self.selectedlist.addItem(Player[0])
			self.selectlist.append(Player[0])
			self.calculations_1(Player[0])
		self.used_points = summ
		self.avail_points = 1000 - summ
		self.points_available.setText(str(self.avail_points))
		self.points_used.setText(str(self.used_points))
		self.open_Window.close()
#Menu functions end

#Radio button functions:
	def enablebuttons(self):# enables radio buttons
		self.batradio.setEnabled(True)
		self.bowlradio.setEnabled(True)
		self.arradio.setEnabled(True)
		self.wkradio.setEnabled(True)

	def load_names(self): #when radio buttons clicked
		datacurs.execute('SELECT player,value from stats WHERE ctg = "BAT";')
		batter = datacurs.fetchall()
		datacurs.execute('SELECT Player,value from stats WHERE ctg = "WK";')
		wick = datacurs.fetchall()
		datacurs.execute('SELECT Player,value from stats WHERE ctg ="AR";')
		rounder = datacurs.fetchall()
		datacurs.execute('SELECT Player,value from stats WHERE ctg = "BWL";')
		bowlin = datacurs.fetchall()

		batsmen = []
		bowlers = []
		allrounders = []
		wcktkeepers = []

		for boo in bowlin:
			bowlers.append(boo[0])
			self.stats[boo[0]] = boo[1]
			self.a.append(boo[0])
		for batt in batter:
			batsmen.append(batt[0])
			self.b.append(batt[0])
			self.stats[batt[0]] = batt[1]
		for roun in rounder:
			allrounders.append(roun[0])
			self.stats[roun[0]] = roun[1]
			self.c.append(roun[0])
		for wic in wick:
			wcktkeepers.append(wic[0])
			self.stats[wic[0]] = wic[1]
			self.d.append(wic[0])
		
		for selected in self.selectlist:
			if selected in allrounders:
				allrounders.remove(selected)
			elif selected in batsmen:
				batsmen.remove(selected)
			elif selected in bowlers:
				bowlers.remove(selected)
			elif selected in wcktkeepers:
				wcktkeepers.remove(selected)

		if self.batradio.isChecked() == True:
			self.availablelist.clear()
			for i in range(len(batsmen)):
				item = QtWidgets.QListWidgetItem(batsmen[i])
				font = QtGui.QFont()
				font.setBold(True)
				font.setWeight(69)
				item.setFont(font)
				self.availablelist.addItem(item)
		elif self.bowlradio.isChecked() == True:
			self.availablelist.clear()
			for i in range(len(bowlers)):
				item = QtWidgets.QListWidgetItem(bowlers[i])
				font = QtGui.QFont()
				font.setBold(True)
				font.setWeight(69)
				item.setFont(font)
				self.availablelist.addItem(item)
		elif self.arradio.isChecked() == True:
			self.availablelist.clear()
			for i in range(len(allrounders)):
				item = QtWidgets.QListWidgetItem(allrounders[i])
				font = QtGui.QFont()
				font.setBold(True)
				font.setWeight(69)
				item.setFont(font)
				self.availablelist.addItem(item)

		elif self.wkradio.isChecked() == True:
			self.availablelist.clear()
			for i in range(len(wcktkeepers)):
				item = QtWidgets.QListWidgetItem(wcktkeepers[i])
				font = QtGui.QFont()
				font.setBold(True)
				font.setWeight(69)
				item.setFont(font)
				self.availablelist.addItem(item)
#Radio Functions end

#Other functions:
	def checkerror(self):# check for errors
			msg = QMessageBox()
			if self.wicketerscount > 1:
				msg.setIcon(QMessageBox.Warning)
				msg.setInformativeText('Only 1 wicketkeeper is allowed!')
				msg.setWindowTitle("Error")
				msg.exec_()
				return 0
			if self.totalcount < 11 :
				return 0
			if self.wicketerscount < 1:
				return 0
			if self.avail_points <= -1:
				msg.setIcon(QMessageBox.Warning)
				msg.setInformativeText('Not enough points!')
				msg.setWindowTitle("Error")
				msg.exec_()
				return 0

			return 1

	def reset(self): # reset local variables, lists
		self.enablebuttons()
		self.load_names()
		self.used_points = 0
		self.alrdscount = 0
		self.wicketerscount = 0
		self.batsmencount = 0
		self.bowlerscount = 0
		self.totalcount = 0
		self.avail_points = 1000
		self.points_available.setText(str(self.avail_points))
		self.points_used.setText(str(self.used_points))
		self.bowlcount.setText(str(self.bowlerscount))
		self.batcount.setText(str(self.batsmencount))
		self.alrcount.setText(str(self.alrdscount))
		self.wicketcount.setText(str(self.wicketerscount))
		self.selectlist.clear()
		self.load_names()
		self.selectedlist.clear()

if __name__ == "__main__":
	import sys
	app = QtWidgets.QApplication(sys.argv)
	MainWindow = QtWidgets.QMainWindow()
	ui = Ui_MainWindow()
	ui.setupUi(MainWindow)
	MainWindow.show()
	sys.exit(app.exec_())


input("Press enter to exit", )